// Code generated by ent, DO NOT EDIT.

package transaction

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the transaction type in the database.
	Label = "transaction"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldTnx holds the string denoting the tnx field in the database.
	FieldTnx = "tnx"
	// FieldSourceAcc holds the string denoting the source_acc field in the database.
	FieldSourceAcc = "source_acc"
	// FieldDestAcc holds the string denoting the dest_acc field in the database.
	FieldDestAcc = "dest_acc"
	// FieldAmount holds the string denoting the amount field in the database.
	FieldAmount = "amount"
	// FieldDatetime holds the string denoting the datetime field in the database.
	FieldDatetime = "datetime"
	// Table holds the table name of the transaction in the database.
	Table = "transaction"
)

// Columns holds all SQL columns for transaction fields.
var Columns = []string{
	FieldID,
	FieldTnx,
	FieldSourceAcc,
	FieldDestAcc,
	FieldAmount,
	FieldDatetime,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// TnxValidator is a validator for the "tnx" field. It is called by the builders before save.
	TnxValidator func(string) error
	// SourceAccValidator is a validator for the "source_acc" field. It is called by the builders before save.
	SourceAccValidator func(string) error
	// DestAccValidator is a validator for the "dest_acc" field. It is called by the builders before save.
	DestAccValidator func(string) error
)

// OrderOption defines the ordering options for the Transaction queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByTnx orders the results by the tnx field.
func ByTnx(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTnx, opts...).ToFunc()
}

// BySourceAcc orders the results by the source_acc field.
func BySourceAcc(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldSourceAcc, opts...).ToFunc()
}

// ByDestAcc orders the results by the dest_acc field.
func ByDestAcc(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldDestAcc, opts...).ToFunc()
}

// ByAmount orders the results by the amount field.
func ByAmount(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldAmount, opts...).ToFunc()
}

// ByDatetime orders the results by the datetime field.
func ByDatetime(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldDatetime, opts...).ToFunc()
}
